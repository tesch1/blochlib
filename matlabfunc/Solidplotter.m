%
% SOLIDPLOTTER v3.2
%
% author:: Bo Blanton UC Berkeley, Dept of Chemistry
% email:: magneto@dirac.cchem.berkeley.edu
% more info:: http://waugh.cchem.berkeley.edu/blochlib/
% last modified:: 10.20.02
%
% note--> THIS IS NOT A FUNCTION...all variables declared here are global 
%  thus DO NOT run 2 instances of this app...it will cause crazy confusion
%  see http://waugh.cchem.berkeley.edu/blochlib/ for 
% specific info regarding file formats read and the like....
%
%  It will plot oodles of formats, and make them viable matlab formats
%  so that you can save them, and play with them at will
%  this program is not meant to the 'end-all' of plotting 
%  it is designed to give you as many as possible ways to view
%  1D or 2D data
%
% ---------------------------FILE FORMATS-------------------
%
% **"1D--Solid format"--> 
%     this is the output type for the "BlochSolver.writeFID()" function
%     it contains a seven column format
%     <time> <freq> <fft real> <fft imag> <fid real> <fid imag> <power fft>
% **"2D--Solid format"-->
%     this is is NxM ASCII matrix generated by the 'Solid' program
%     (http://waugh.cchem.berkeley.edu/solid/)
%     not really to be used with the Blochlib library
% **"1D--Nx2 ASCII" --> 
%     assumed to be a 
%     <real> <imag> 
%     1D data set
% **"2D--MxN ASCII" --> 
%     assumed to be a 2D data set where each data point is REAL
% **"1D--Nx1 ASCII" --> 
%     assumed to be a 
%     <real>
%     1D data set
% **"2D-Nx4(sparse)" --> 
%     This is an ASCII file with the data elements in file given by
%     <row index> <col index> <real> <imag>
% **"2D-Nx3(sparse)" --> 
%     This is an ASCII file with the data elements in file given by
%     <row index> <col index> <real>
% **"2D-SpinSite(ASC XYZ) --> 
%     THis is an **ASCII** file with the data elements in file given by
%     saved in the "ASCII x y z" format that the SpinSight program
% **"1 or 2D-SpinSite" --> 
%     THis is an **BINARY** raw 1 or 2D FID data DIRECTORY from the 'SpinSite' program 
% **"1 or 2D-XWINNMR" --> 
%     THis is an **BINARY** raw 1 or 2D FID data DIRECTORY from the 'XWINNMR' program 
% **"MatLab File (*.mat)" --> 
%     This loads up a matlab file...NOTE::
%     after loading a matlab file you will need to specifiy a 
%     variable in the 'Load a var' section on the GUI
%     otherwise there is not data set loaded
% 
% --the Variable Loader loads a current workspace variable into the plotter setting
% 
% --THe "Multi File Loader' loads a sequence of '1D-Solid Format' files into
%   a larger 2D array
%   as an example....if i had 32 files named "data0, data1...data31"
%   the "Begining Limit:" would be 0
%   the "Ending Limit:" would be 31
%   the "File Base:" would be 'data'
%   
%   this part of the plotter was meant for doing parameter space profiles of fids
%   or as an easy way to allow for MPI parallelization inside the programs without
%   spending too much effort on reconstrucuting complex data in the progrma
%   ...simply spit out the data  and let this function handle the reconstruction
%    
% 
% ---------------------------PLOTTING OPTIONS-------------------
% ***Hit "Real", "Imag", "Abs" to actually plot something....
% 
% **1D plots(s) --> 
%     if the data set is only 1D, then this is all you can do
%     if it is a 2D data set then you can select slices within the data set
%     transposing the data set will get you the slices along the other direction
% **pcolor--> 
%     The matlab 'pcolor' command which provides a 2D color map profile
%     plot of the 2D data
% **Sum 1st Dim-->
%     Sums all the data along the 1st Dimension and plots a 1D 
% **Sum 2nd Dim-->
%     Sums all the data along the 2nd Dimension and plots a 1D 
% **surface-->
%     constructs a 3D view of the 2D data..note:: the color mapping
%     here, i have noticed, tends to get a bit messed up after
%     plotting this twice...basically, matlab does not erase/clear
%     3D plots when attemping to plot anotherone...this little fact
%     is very anoying...the only way to cure is to close the window
%     and start again...
% **contour-->
%     contour plots...allows you to set the number of levels also
% **CMXtype-->
%     attempts to create a 3D view of 2D data like the
%     SpinSight programs views of 2D data sets
%     i have notice on Windows that the renderer is very bad here
%     but on Linux boxes the Renderer is fine...
% **plot3-->
%     creates line plots of the slices along the 1st dimension
%     provides a nice way to export the 3D set
%     to a editable Postscript file (the surface, pcolor, CMX type
%     all bitmap the resulting data)
% 
% 
%  THE RAW DATA IS STORED IN THE GLOBAL VARIABLE 'vdat'
%  ....So you can use it anywhere.....
%
%


h0 = figure('Color',[0.8 0.8 0.8], ...
	'PaperPosition',[18 180 576 432], ...
	'PaperUnits','points', ...
	'Position',[529 365 793 649], ...
	'Tag','Fig1', ...
	'ToolBar','none');
h1 = axes('Parent',h0, ...
	'Units','normalized', ...
	'CameraUpVector',[0 1 0], ...
	'Color',[1 1 1], ...
	'Position',[ 0.255989911727617 0.147919876733436 0.725094577553594 0.671802773497689 ], ...
	'Tag','Axes1', ...
	'XColor',[0 0 0], ...
	'YColor',[0 0 0], ...
	'ZColor',[0 0 0]);
h2 = text('Parent',h1, ...
	'Color',[0 0 0], ...
	'HandleVisibility','off', ...
	'HorizontalAlignment','center', ...
	'Position',[0.4991119005328596 -0.04655870445344146 9.160254037844386], ...
	'Tag','Axes1Text4', ...
	'VerticalAlignment','cap');
set(get(h2,'Parent'),'XLabel',h2);
h2 = text('Parent',h1, ...
	'Color',[0 0 0], ...
	'HandleVisibility','off', ...
	'HorizontalAlignment','center', ...
	'Position',[-0.05150976909413857 0.4979757085020242 9.160254037844386], ...
	'Rotation',90, ...
	'Tag','Axes1Text3', ...
	'VerticalAlignment','baseline');
set(get(h2,'Parent'),'YLabel',h2);
h2 = text('Parent',h1, ...
	'Color',[0 0 0], ...
	'HandleVisibility','off', ...
	'HorizontalAlignment','right', ...
	'Position',[-0.3463587921847247 1.202429149797571 9.160254037844386], ...
	'Tag','Axes1Text2', ...
	'Visible','off');
set(get(h2,'Parent'),'ZLabel',h2);
h2 = text('Parent',h1, ...
	'Color',[0 0 0], ...
	'HandleVisibility','off', ...
	'HorizontalAlignment','center', ...
	'Position',[0.4991119005328596 1.012145748987854 9.160254037844386], ...
	'Tag','Axes1Text1', ...
	'VerticalAlignment','bottom');
set(get(h2,'Parent'),'Title',h2);

uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0252 0.3652 0.1740 0.2666], ...
	'Style','frame', ...
	'Tag','windowF');

uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[ 0.0138713745271122 0.268104776579353 0.199243379571248 0.656394453004623 ], ...
	'Style','frame', ...
	'Tag','dataproc frame');

uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0139 0.0247 0.1992 0.2327], ...
	'Style','frame', ...
	'Tag','plotFrame');
	
uicontrol('Units','normalized', ...
	'ListboxTop',0, ...
	'Position',[0.2421 0.8536 0.7163 0.1202], ...
	'Style','frame', ...
	'Tag','Frame1');
	
h1 = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[ 0.222084367245658 0.0274963820549928 0.75682382133995 0.065123010130246 ], ...
	'Style','frame', ...
	'Tag','phaseFRAME');	
	
realP = uicontrol('Units','normalized', ...
	'BackgroundColor',[ 0.752941176470588 0.752941176470588 0.752941176470588 ], ...
	'ListboxTop',0, ...
	'Position',[ 0.141235813366961 0.14175654853621 0.0617906683480454 0.0323574730354391 ], ...
	'String','Real', ...
	'Tag','Real', ...
	'TooltipString','plot real part');
imagP = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.1412 0.1109 0.0618 0.0324], ...
	'String','Imag', ...
	'Tag','Imag', ...
	'TooltipString','plot imaginary part');
absP = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.1412 0.0801 0.0618 0.0324], ...
	'String','Abs', ...
	'Tag','Abs', ...
	'TooltipString','plot absolute value');

%infotext
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontSize',14, ...
	'FontWeight','demi', ...
	'ListboxTop',0, ...
	'Position',[ 0.0151324085750315 0.932203389830509 0.220680958385876 0.0400616332819723 ], ...
	'String','The plotter widget', ...
	'Style','text', ...
	'Tag','title');

% *************** FFT OPTIONS *******************888
uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.021437578814628 0.759630200308166 0.181588902900378 0.130970724191063], ...
	'Style','frame', ...
	'Tag','FFTframe');
NoFFTd1= uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.02648171500630517 0.852080123266564 0.07566204287515763 0.03081664098613251], ...
	'String','No FFT', ...
	'Style','radiobutton', ...
	'Tag','dim1fft', ...
	'TooltipString','No FFT for Dim 1');
FullFFTd1= uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.0264817150063052 0.821263482280431 0.0756620428751576 0.0308166409861325], ...
	'String','Full FFT', ...
	'Style','radiobutton', ...
	'Tag','dim1fft', ...
	'TooltipString','Full FFT for Dim 1');
RealFFTd1= uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.02648171500630517 0.790446841294299 0.08575031525851198 0.03081664098613251], ...
	'String','Real FFT', ...
	'Style','radiobutton', ...
	'Tag','dim1fft', ...
	'TooltipString','Real FFT for Dim 1');
ImagFFTd1= uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.02648171500630517 0.7611710323574731 0.08448928121059268 0.03081664098613251], ...
	'String','Imag FFT', ...
	'Style','radiobutton', ...
	'Tag','dim1fft', ...
	'TooltipString','Imag FFT for Dim 1');
ImagFFTd2=uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[ 0.113493064312736 0.761171032357473 0.0832282471626734 0.0308166409861325 ], ...
	'String','Imag FFT', ...
	'Style','radiobutton', ...
	'Tag','dim2fft', ...
	'TooltipString','Imag FFT for Dim 2');
RealFFTd2= uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[ 0.113493064312736 0.791987673343606 0.0870113493064313 0.0308166409861325 ], ...
	'String','Real FFT', ...
	'Style','radiobutton', ...
	'Tag','dim2fft', ...
	'TooltipString','Real FFT for Dim 2');
FullFFTd2=uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[ 0.113493064312736 0.822804314329738 0.0756620428751576 0.0308166409861325 ], ...
	'String','Full FFT', ...
	'Style','radiobutton', ...
	'Tag','dim2fft', ...
	'TooltipString','Full FFT for Dim 2');
NoFFTd2=uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[ 0.113493064312736 0.852080123266564 0.0756620428751576 0.0308166409861325 ], ...
	'String','No FFT', ...
	'Style','radiobutton', ...
	'Tag','dim2fft', ...
	'TooltipString','No FFT for Dim 2');

plottype = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.1047 0.1818 0.1059 0.0370], ...
	'String','1D plot(s)|pcolor|Sum 1st Dim|Sum 2nd Dim|surface|contour|CMXtype|stacked|plot3', ...
	'Style','popupmenu', ...
	'Tag','plottype', ...
	'TooltipString','plot type', ...
	'UserData','[ ]', ...
	'Value',1);

	
dcoff = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontSize',8, ...
	'ListboxTop',0, ...
	'Position',[0.03026481715006305 0.7195685670261942 0.1614123581336696 0.03543913713405239], ...
	'String','DC offset correction', ...
	'Style','checkbox', ...
	'Tag','dccorrect');
	
zfill = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontSize',8, ...
	'ListboxTop',0, ...
	'Position',[0.03026481715006305 0.6841294298921418 0.1614123581336696 0.03543913713405239], ...
	'String','Zero Fill', ...
	'Style','checkbox', ...
	'Tag','zfill');
	
Transpose = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontSize',8, ...
	'ListboxTop',0, ...
	'Position',[0.03026481715006305 0.6486902927580894 0.1614123581336696 0.03543913713405239], ...
	'String','transpose data', ...
	'Style','checkbox', ...
	'Tag','transpose');
	
%% Windowing options	
 uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontSize',8, ...
	'FontWeight','bold', ...
 	'HorizontalAlignment','left', ...
 	'ListboxTop',0, ...
	'Position',[0.0303 0.5917 0.1576 0.0308], ...
	'String','Windowing Options', ...
	'Style','text', ...
	'Tag','windowing options');
lb1 = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Max',1000, ...
	'Position',[0.0391 0.5639 0.0542 0.0308], ...
	'String','0', ...
	'Style','edit', ...
	'Tag','LB1', ...
	'TooltipString','appdization along the 1st dim', ...
	'UserData','[ ]');
	
lb2 = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.0391 0.5331 0.0542 0.0293], ...
	'String','0', ...
	'Style','edit', ...
	'Tag','LB2', ...
	'TooltipString','appdization along the 2nd dim');

%info text
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'HorizontalAlignment','left', ...
	'Position',[0.0908 0.5686 0.0971 0.0231], ...
	'String','LB 1st dim (AU)', ...
	'Style','text', ...
	'Tag','lb1std', ...
	'UserData','[ ]');
%info text
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'HorizontalAlignment','left', ...
	'Position',[0.0908 0.5347 0.0984 0.0247], ...
	'String','LB 2nd dim (AU)', ...
	'Style','text', ...
	'Tag','lb2nd', ...
	'UserData','[ ]');
gaussian = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0403530895334174 0.4946070878274269 0.09709962168978563 0.03081664098613251], ...
	'String','Guassian', ...
	'Style','checkbox', ...
	'Tag','window', ...
	'TooltipString','Gaussian');
hanning = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0403530895334174 0.4637904468412944 0.09709962168978563 0.03081664098613251], ...
	'String','Hanning', ...
	'Style','checkbox', ...
	'Tag','window', ...
	'TooltipString','Hanning');
hamming=uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0403530895334174 0.4329738058551619 0.09709962168978563 0.03081664098613251], ...
	'String','Hamming', ...
	'Style','checkbox', ...
	'Tag','window', ...
	'TooltipString','Hamming');
winVal1 = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.02900378310214376 0.3898305084745763 0.0416141235813367 0.03081664098613251], ...
	'Style','edit', ...
	'Tag','windowED1');
winVal2=uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.02900378310214376 0.3605546995377504 0.0416141235813367 0.03081664098613251], ...
	'Style','edit', ...
	'Tag','windowED2');
winED1 = uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.0694 0.3914 0.1122 0.0308], ...
	'Style','text', ...
	'Tag','windEdTEXT1');
winED2=uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.0694 0.3606 0.112 0.0308], ...
	'Style','text', ...
	'Tag','windEdTEXT2');	
	
uicontrol('Units','normalized', ...
	'BackgroundColor',[ 0.701960784313725 0.709803921568627 0.768627450980392 ], ...
	'FontWeight','bold', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.2610340479192938 0.9352850539291218 0.1387137452711223 0.02773497688751926], ...
	'String','Single file loader', ...
	'Style','text', ...
	'Tag','loaderTEXT');
uicontrol('Units','normalized', ...
	'BackgroundColor',[ 0.701960784313725 0.709803921568627 0.768627450980392 ], ...
	'FontWeight','bold', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.2724 0.9029 0.1135 0.0247], ...
	'String','Variable loader', ...
	'Style','text', ...
	'Tag','loaderTEXT');
uicontrol('Units','normalized', ...
	'BackgroundColor',[ 0.701960784313725 0.709803921568627 0.768627450980392 ], ...
	'FontWeight','bold', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.2711223203026482 0.8690292758089369 0.128625472887768 0.02311248073959938], ...
	'String','Multi File loader', ...
	'Style','text', ...
	'Tag','loaderTEXT');	

%*****************LOADER UIs ****************************************
LoadFileText = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.4098 0.9345 0.1349 0.0354], ...
	'Style','edit', ...
	'Tag','LoadFileText', ...
	'String', 'Fill me', ...
	'TooltipString','enter file to load');
loadFile = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'Callback','           ', ...
	'ListboxTop',0, ...
	'Position',[0.5523 0.9361 0.0984 0.0324], ...
	'String','load a file', ...
	'Tag','loadFile', ...
	'TooltipString','load a file');
filetype = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[ 0.654476670870114 0.939907550077042 0.16141235813367 0.0277349768875193 ], ...
	'String','1D--Solid format|2D--Solid format|1D--Nx2 ASCII|2D--MxN ASCII|1D-Nx1 ASCII|2D-Nx4(sparse)|2D-Nx3(sparse)|SpinSite(ASC XYZ)|1 or 2D-SpinSite|1 or 2D-XWINNMR|Matlab File (*.mat)', ...
	'Style','popupmenu', ...
	'HorizontalAlignment', 'left',...
	'Tag','filetype', ...
	'Value',1);
FileTypeText = uicontrol('Units','normalized', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[ 0.814476670870114 0.939907550077042 0.1411235813367 0.0277349768875193 ], ...
	'String','enter FILE name', ...
	'Style','text', ...
	'Tag','FileTypeText');
	
LoadVarText = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.4098 0.8968 0.1337 0.0354], ...
	'Style','edit', ...
	'Tag','LoadVarText', ...
	'TooltipString','enter Variable to load');
loadVar = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.5523 0.8983 0.0984 0.0324], ...
	'String','load a var', ...
	'Tag','loadVar', ...
	'TooltipString','load an exsisting workspace variable');

	
multilim1 = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Max',10000, ...
	'Position',[0.5069 0.8629 0.0404 0.0308], ...
	'String','0', ...
	'Style','edit', ...
	'Tag','lim1', ...
	'TooltipString','FIRST file in the series of ''base''lim1''');
multilim2 = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Max',10000, ...
	'Position',[0.6343 0.8629 0.0404 0.0308], ...
	'String','0', ...
	'Style','edit', ...
	'Tag','lim2', ...
	'TooltipString','LAST file in the series of ''base''lim2''');
uicontrol('Units','normalized', ...
	'BackgroundColor',[ 0.701960784313725 0.709803921568627 0.768627450980392 ], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[0.3997 0.8675 0.1072 0.02311], ...
	'String','Begining Limit::', ...
	'Style','text', ...
	'Tag','lim1 TEXT');
uicontrol('Units','normalized', ...
	'BackgroundColor',[ 0.701960784313725 0.709803921568627 0.768627450980392 ], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[0.5473 0.8675 0.0870 0.0216], ...
	'String','Ending Limit::', ...
	'Style','text', ...
	'Tag','lim2 TEXT');
multibase = uicontrol('Units','normalized', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Max',10000, ...
	'Position',[.7440 0.8629 0.0567 0.0308], ...
	'String','dat', ...
	'Style','edit', ...
	'Tag','multifbase', ...
	'TooltipString','the BASE file name in the multi loaded files series');
loadMultiFile= uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.8008 0.8629 0.0984 0.0324], ...
	'String','multi file load', ...
	'Tag','multiloadFile', ...
	'TooltipString','load a series of numerically labeled files into a proper matlab 2D array');
uicontrol('Units','normalized', ...
	'BackgroundColor',[ 0.701960784313725 0.709803921568627 0.768627450980392 ], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[0.6747 0.8690 .0694 0.0200], ...
	'String','File Base::', ...
	'Style','text', ...
	'Tag','base TEXT');
	
	
%info string
 	
 uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontWeight','bold', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[ 0.0201765447667087 0.893682588597843 0.185372005044136 0.0292758089368259 ], ...
	'String','data processing options', ...
	'Style','text', ...
	'Tag','dataproc');
plotOpts = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontSize',8, ...
	'FontWeight','bold', ...
 	'HorizontalAlignment','left', ...
 	'ListboxTop',0, ...
	'Position',[0.0277 0.2234 0.1690 0.0308], ...
	'String','Plotting Options', ...
	'Style','text', ...
	'Tag','ploting options');
sliceSlider = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0227 0.1880 0.0807 0.0308], ...
	'Style','slider', ...
	'Tag','SliceSlider');
sliceText = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[0.0593 0.1556 0.0328 0.0308], ...
	'String','all', ...
	'Style','text', ...
	'Tag','slicedisp');
sliceTITLE=uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0189 0.1633 0.0391 0.0231], ...
	'String','Slice', ...
	'Style','text', ...
	'Tag','silceTITLE');
	
Cup = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.05170239596469105 0.1879815100154083 0.02395964691046658 0.03081664098613251], ...
	'String','+', ...
	'Tag','contourUP');
Cdown = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.07566204287515763 0.1879815100154083 0.02395964691046658 0.03081664098613251], ...
	'String','-', ...
	'Tag','contourDOWN');
Ctext = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[0.0403530895334174 0.1540832049306626 0.03783102143757881 0.02465331278890601], ...
	'String','levels', ...
	'Style','text', ...
	'Tag','ClevlTEXT', ...
	'UserData','[ ]');
Cinfo = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.83921568627451 0.83921568627451 0.83921568627451], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[ 0.0832282471626734 0.157164869029276 0.0352206809583859 0.0300308166409861 ], ...
	'String','20', ...
	'Style','edit', ...
	'Tag','ClevlINFO', ...
	'UserData','[ ]');
	
	
%info text
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FontWeight','bold', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.0277 0.0894 0.1110 0.0524], ...
	'String','Choose one of these to plot', ...
	'Style','text', ...
	'Tag','choosetag');
cmap=uicontrol('Units','normalized', ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.07818411097099622 0.03235747303543914 0.0617906683480454 0.02927580893682589], ...
	'String',['jet ';'hsv ';'hot ';'cool';'gray';'bone'], ...
	'Style','popupmenu', ...
	'Tag','colormapmenu', ...
	'UserData','[ ]', ...
	'Value',1);
cmapinvert = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.1412358133669609 0.03081664098613251 0.06557377049180328 0.03081664098613251], ...
	'String','invert?', ...
	'Style','checkbox', ...
	'Tag','cmapinvert', ...
	'TooltipString','Invert the selected color map');
	
%infoetxt
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.01891551071878941 0.03235747303543914 0.05548549810844893 0.02465331278890601], ...
	'String','ColorMap', ...
	'Style','text', ...
	'Tag','colormapinfo');
	
	
sw1Ed = uicontrol('Units','normalized', ...
	'HorizontalAlignment','left', ...
	'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',[0.0290 0.3205 0.0492 0.0308], ...
	'Style','edit', ...
	'String', '0', ...
	'Tag','sweepwidth1');
uicontrol('Units','normalized', ...
	'HorizontalAlignment','left', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0782 0.3205 0.0757 0.0308], ...
	'String','SW dim 1', ...
	'Style','text', ...
	'Tag','SW dim 1:', ...
	'TooltipString','Sweep width of the first dim', ...
	'UserData','[ ]');
uicontrol('Units','normalized', ...
	'HorizontalAlignment','left', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.0782 0.2897 0.0757 0.0308], ...
	'String','SW dim 2', ...
	'Style','text', ...
	'Tag','SW 2nd Dim:', ...
	'TooltipString','Sweep width of the second dim', ...
	'UserData','[ ]');
sw2Ed=uicontrol('Units','normalized', ...
	'HorizontalAlignment','left', ...
	'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',[0.0290 0.2897 0.0492 0.0308], ...
	'String', '0', ...
	'Style','edit', ...
	'Tag','sweepwidth2');
	
% Phaser bits
ph0Slide = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Max',360, ...
	'Min',-360, ...
	'Value', 0, ...
	'SliderStep', [0.001, 0.01], ...
	'Position',[ 0.275434243176179 0.0564399421128799 0.179900744416873 0.0289435600578871 ], ...
	'Style','slider', ...
	'Tag','Phase0', ...
	'UserData','[ ]');
ph1Slide = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Max',360, ...
	'Min',-360, ...
	'Value', 0, ...
	'SliderStep', [0.001, 0.01], ...
	'Position',[ 0.48014888337469 0.0564399421128799 0.179900744416873 0.0289435600578871 ], ...
	'Style','slider', ...
	'Tag','Phase1', ...
	'UserData','[ ]');
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.255583126550869 0.0303907380607815 0.0459057071960298 0.0260492040520984 ], ...
	'String','-360', ...
	'Style','text', ...
	'Tag','ph0--0');
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[ 0.466501240694789 0.0347322720694645 0.0459057071960298 0.020260492040521 ], ...
	'String','-360', ...
	'Style','text', ...
	'Tag','ph1--0');
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.4292803970223325 0.03039073806078148 0.03473945409429281 0.0260492040520984], ...
	'String','360', ...
	'Style','text', ...
	'Tag','ph0--360');
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.6290322580645161 0.03039073806078148 0.03473945409429281 0.0260492040520984], ...
	'String','360', ...
	'Style','text', ...
	'Tag','ph1--360');
uicontrol('Parent',h0, ...
	'Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[ 0.296526054590571 0.0347322720694645 0.127791563275434 0.0217076700434153 ], ...
	'String','Zero Order Phase', ...
	'Style','text', ...
	'Tag','zero orderphase', ...
	'TooltipString','Zero order phase');
curph0 = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[0.2258064516129032 0.05788712011577424 0.04466501240694789 0.0260492040520984], ...
	'String','0', ...
	'Style','text', ...
	'Tag','currentph0');
curph1 = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[0.6612903225806451 0.05788712011577424 0.04466501240694789 0.0260492040520984], ...
	'String','0', ...
	'Style','text', ...
	'Tag','currentph1');
uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[ 0.504962779156328 0.0332850940665702 0.127791563275434 0.0231548480463097 ], ...
	'String','First Order Phase', ...
	'Style','text', ...
	'Tag','first orderphase', ...
	'TooltipString','first order phase');
AppAll= uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.8684863523573201 0.03907380607814761 0.08436724565756824 0.04196816208393632], ...
	'String','Apply All', ...
	'Tag','apply2d', ...
	'Style', 'checkbox', ...
	'TooltipString','click to apply current phase setting over entire 2D data set');
MidPt = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.750620347394541 0.02894356005788712 0.03473945409429281 0.02604920405209841], ...
	'String','midpt', ...
	'Style','text', ...
	'Tag','midpt');
ChooseCent = uicontrol('Units','normalized', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'ListboxTop',0, ...
	'Position',[0.6885856079404467 0.05499276410998553 0.1588089330024814 0.03039073806078147], ...
	'String','Choose Center Pt', ...
	'Tag','chooseCenterP', ...
	'TooltipString','choose center point for phasing');
fig=h0;


%%%%%%%% COLOR MAP SETTER
setmap=['val = get(cmap,''Value'');' ...
	'cmapinv = get(cmapinvert, ''Value''); ' ...
	'if cmapinv==0 ' ...
		'if val == 1 ' ...
			'colormap(jet); ' ...
		'elseif val == 2 ' ...
			'colormap(hsv); ' ...
		'elseif val == 3 ' ...
			'colormap(hot); ' ...
		'elseif val == 4 ' ...
			'colormap(cool); '...
		'elseif val == 5 ' ...
			'colormap(gray); '...
		'elseif val == 6 '...
			'colormap(bone); '...
		'end; '...
	'else '...
		'if val == 1 ' ...
			'colormap(flipud(jet)); ' ...
		'elseif val == 2 ' ...
			'colormap(flipud(hsv)); ' ...
		'elseif val == 3 ' ...
			'colormap(flipud(hot)); ' ...
		'elseif val == 4 ' ...
			'colormap(flipud(cool)); '...
		'elseif val == 5 ' ...
			'colormap(flipud(gray)); '...
		'elseif val == 6 '...
			'colormap(flipud(bone)); '...
		'end; '...
	'end; '];

set(cmap, 'Callback', setmap);
set(cmapinvert, 'Callback', setmap);

%%%%% GLOBAL VARIABLES
fname='';
vdat='';
workingdat='';
is1D=1;  %a 1D data set (1=yes, 0=no)
issolid=1; %sets up data data type from solid=1 or not =0
ffty=3; %a flag for the 'ffter' function 3=fft all dims, 2=fft second dim, 1=fft first dim, 0=no fft
sw1=1;
sw2=1;
zf=0;
totrans=0;



%%%%%%% Plotter type setting...
plotpref=0;  
plotty=1; 
slice=0;
numslice=0;
HitPlotButton=0;
NumContours=10;
ph0=0;
ph1=0;
centpt=0;
appphaseall=0;

set(AppAll, 'Visible', 'off');
set(MidPt, 'Visible', 'off'); 
set(ChooseCent, 'Visible', 'off'); 

set(sliceSlider, 'Visible', 'off');
set(sliceTITLE, 'Visible', 'off'); 
set(sliceText, 'Visible', 'off'); 

set(Cup, 'Visible', 'off');
set(Cdown, 'Visible', 'off');
set(Cinfo, 'Visible', 'off');
set(Ctext, 'Visible', 'off');


%*********fft function radio button things ****
set(NoFFTd2, 'Visible', 'off');
set(ImagFFTd2, 'Visible', 'off');
set(FullFFTd2, 'Visible', 'off');
set(RealFFTd2, 'Visible', 'off');

set(NoFFTd1, 'Value', 1);

ffty=[0 0];


GetFFTY=['if get(NoFFTd1, ''Value'')==1 '...
		'ffty(1)=0; '...	
		'set(RealFFTd1, ''Value'', 0); '...
		'set(FullFFTd1, ''Value'', 0); '...
		'set(ImagFFTd1, ''Value'', 0); '...		
	'end; '...
	'if get(FullFFTd1, ''Value'')==1 '...
		'ffty(1)=1; '...	
		'set(RealFFTd1, ''Value'', 0); '...
		'set(NoFFTd1, ''Value'', 0); '...
		'set(ImagFFTd1, ''Value'', 0); '...		
	'end; '...
	'if get(RealFFTd1, ''Value'')==1 '...
		'ffty(1)=2; '...	
		'set(FullFFTd1, ''Value'', 0); '...
		'set(NoFFTd1, ''Value'', 0); '...
		'set(ImagFFTd1, ''Value'', 0); '...		
	'end; '...
	'if get(ImagFFTd1, ''Value'')==1 '...
		'ffty(1)=3; '...	
		'set(RealFFTd1, ''Value'', 0); '...
		'set(NoFFTd1, ''Value'', 0); '...
		'set(FullFFTd1, ''Value'', 0); '...		
	'end; '...
	'if get(NoFFTd2, ''Value'')==1 '...
		'ffty(2)=0; '...	
		'set(RealFFTd2, ''Value'', 0); '...
		'set(FullFFTd2, ''Value'', 0); '...
		'set(ImagFFTd2, ''Value'', 0); '...		
	'end; '...
	'if get(FullFFTd2, ''Value'')==1 '...
		'ffty(2)=1; '...	
		'set(RealFFTd2, ''Value'', 0); '...
		'set(NoFFTd2, ''Value'', 0); '...
		'set(ImagFFTd2, ''Value'', 0); '...		
	'end; '...
	'if get(RealFFTd2, ''Value'')==1 '...
		'ffty(1)=2; '...	
		'set(FullFFTd2, ''Value'', 0); '...
		'set(NoFFTd2, ''Value'', 0); '...
		'set(ImagFFTd2, ''Value'', 0); '...		
	'end; '...
	'if get(ImagFFTd2, ''Value'')==1 '...
		'ffty(2)=3; '...	
		'set(RealFFTd2, ''Value'', 0); '...
		'set(NoFFTd2, ''Value'', 0); '...
		'set(FullFFTd2, ''Value'', 0); '...		
	'end; '];
	


KillDim1=['set(RealFFTd1, ''Value'', 0); '...
	'set(FullFFTd1, ''Value'', 0); '...
	'set(NoFFTd1, ''Value'', 0); '...
	'set(ImagFFTd1, ''Value'', 0); '];
	
KillDim2=['set(RealFFTd2, ''Value'', 0); '...
	'set(FullFFTd2, ''Value'', 0); '...
	'set(NoFFTd2, ''Value'', 0); '...
	'set(ImagFFTd2, ''Value'', 0); '];

fftd2On=[KillDim2 ...
         'if is1D==0 '...
		'set(NoFFTd2, ''Visible'', ''on''); '...
		'set(ImagFFTd2, ''Visible'', ''on''); '...
		'set(FullFFTd2, ''Visible'', ''on''); '...
		'set(RealFFTd2, ''Visible'', ''on''); '...
		'set(NoFFTd2, ''Value'', 1); '...
	'else ' ...
		'set(NoFFTd2, ''Visible'', ''off''); '...
		'set(ImagFFTd2, ''Visible'', ''off''); '...
		'set(FullFFTd2, ''Visible'', ''off''); '...
		'set(RealFFTd2, ''Visible'', ''off''); '...
	'end; ' GetFFTY];

set(NoFFTd1, 'CallBack',[KillDim1 'set(NoFFTd1, ''Value'', 1); ' GetFFTY ]);
set(NoFFTd2, 'CallBack', [KillDim2 'set(NoFFTd2, ''Value'', 1); ' GetFFTY ]);
set(RealFFTd1, 'CallBack', [KillDim1 'set(RealFFTd1, ''Value'', 1); ' GetFFTY ]);
set(RealFFTd2, 'CallBack', [KillDim2 'set(RealFFTd2, ''Value'', 1); ' GetFFTY ]);
set(ImagFFTd1, 'CallBack', [KillDim1 'set(ImagFFTd1, ''Value'', 1); ' GetFFTY ]);
set(ImagFFTd2, 'CallBack', [KillDim2 'set(ImagFFTd2, ''Value'', 1); ' GetFFTY ]);
set(FullFFTd1, 'CallBack', [KillDim1 'set(FullFFTd1, ''Value'', 1); ' GetFFTY ]);
set(FullFFTd2, 'CallBack', [KillDim2 'set(FullFFTd2, ''Value'', 1); ' GetFFTY ]);

genPlot=['if HitPlotButton==1 ' ...
		'PlotterFunc; '...
	'elseif HitPlotButton==2 ' ...
		'PlotterFunc; ' ...
	'elseif HitPlotButton==3 ' ...
		'PlotterFunc; ' ...
	'end; '];

PlotterFunc= [' colordef white; ' ...
	'if HitPlotButton>0 ' ...
	'dcof=get(dcoff, ''Value'');' ...
	'ap1=str2num(get(lb1, ''String''));' ...
	'ap2=str2num(get(lb2, ''String''));' ...
	'sw1=str2num(get(sw1Ed, ''String'')); if (isempty(sw1) | sw1<0); sw1=0; end; '...
	'sw2=str2num(get(sw2Ed, ''String'')); if (isempty(sw2) | sw2<0); sw2=0; end; '...
	'NumContours=str2num(get(Cinfo, ''String'')); '...
	'if windopt>0 ' ...
		'winded1=str2num(get(winVal1, ''String'')); ' ...
		'winded2=str2num(get(winVal2, ''String'')); ' ...
	'end; '...
	'if centpt==0 ' ...
		'centpt=size(vdat,1)/2; '...
		'set(MidPt, ''String'', centpt); ' ...
	'end; '...
	'if is1D==1 ' ...
		'if issolid==1 ' ...
			'if ffty(1)==0 ' ...
				'sw1=vdat(:,1);' ...
			'elseif ffty(1)~=0 ' ...
				'sw1=vdat(:,2);' ...
			'else ' ...
				'disp(''For 1D data sets only NO fft and All fft can be choosen'');' ...
				'return;' ...
			'end; ' ...
			'fid=ffter(complex(vdat(:,5), vdat(:,6)), ap1, ap2, dcof, zf, ffty, windopt, winded1, winded2);' ...
			'fid=phaser(fid, centpt, ph0, ph1); ' ...
			'plotty=HitPlotButton;' ...
			'plotter2D(fid, plotty,NumContours, sw1);' ...
		'else ' ...
			'fid=ffter(vdat, ap1, ap2, dcof, zf, ffty, windopt, winded1, winded2);' ...
			'fid=phaser(fid, centpt, ph0, ph1); ' ...
			'plotty=HitPlotButton;' ...
			'plotter2D(fid, plotty,NumContours,sw1,sw2); ' ...
			' if HitPlotButton==1 ' ...
				' title(''Real--1D--''); ' ...
			'elseif HitPlotButton==2 ' ...
				' title(''Imaginary--1D--''); ' ...
			'elseif HitPlotButton==3 ' ...
				' title(''Power--1D--''); ' ...
			'end; '...
		'end; ' ...
	'else ' ...
		'if totrans==1 ' ...
			'tmdat=vdat''; ' ...
			'tmppSW=sw2; sw2=sw1; sw1=tmppSW;'...
		'else ' ...
			'tmdat=vdat; ' ...
		'end; ' ...
		'if slice > 0 ' ...
			'if centpt==0 ' ...
				'centpt=size(tmdat(slice,1))/2; '...
				'set(MidPt, ''String'', centpt); ' ...
			'end; '...
			'fid=ffter(tmdat(slice,:), ap1, ap2, dcof, zf, ffty, windopt, winded1, winded2);' ...
			'fid=phaser(fid, centpt, ph0, ph1); ' ...
			'plotter2D(fid, HitPlotButton, NumContours,sw1, sw2); '...
			' if HitPlotButton==1 ' ...
				' title(strcat(''Real--Slice--'', num2str(slice))); ' ...
			'elseif HitPlotButton==2 ' ...
				' title(strcat(''Imaginary--Slice--'', num2str(slice))); ' ...
			'elseif HitPlotButton==3 ' ...
				' title(strcat(''Power--Slice--'', num2str(slice))); ' ...
			'end; '...
		'else; '...
			'plotty=plotpref+HitPlotButton;' ...
			'fid=ffter(tmdat, ap1, ap2, dcof, zf, ffty, windopt, winded1, winded2);' ...
			'if appphaseall==1 ' ...
				'fid=phaser(fid, centpt, ph0, ph1); ' ...
			'end; '...
			'plotter2D(fid, plotty, NumContours,sw1, sw2); ' ...			
			' if HitPlotButton==1 ' ...
				' title(''Real--2D--''); ' ...
			'elseif HitPlotButton==2 ' ...
				' title(''Imaginary--2D--''); ' ...
			'elseif HitPlotButton==3 ' ...
				' title(''Power--2D--''); ' ...
			'end; '...
		'end; '...
	'end;' ...
'end; '];



setPlotTy=['HitPlotButton=0; '...
	'if is1D==1 ' ...
		'plotpref=0; ' ...
	   	'set(sliceSlider, ''Visible'', ''off''); ' ...
	  	'set(sliceTITLE, ''Visible'', ''off''); ' ...
	   	'set(sliceText, ''Visible'', ''off''); ' ...
	    'else ' ...
	   	'plotpref=(get(plottype, ''Value'')-1)*10; ' ...
	   'end;' ...
	   'if is1D==0 ' ...
	   	'if plotpref==0 ' ...
	   		'numslice=size(vdat, 1); ' ...
	   		'if totrans==1 ' ...
	   			'numslice=size(vdat, 2);' ...
	   		'end; '...
		   	'if zfill==1 ' ...
	   			'numslice=numslice*2;' ...
	   		'end; '...
	   		'set(sliceSlider, ''Visible'', ''on''); ' ...
	   		'set(sliceTITLE, ''Visible'', ''on''); ' ...
	   		'set(sliceText, ''Visible'', ''on''); ' ...
	   		'set(sliceSlider, ''Min'', 0); ' ...
	   		'set(sliceSlider, ''Max'', 1); ' ...
	   		'if numslice>0 ' ...
	   			'if get(sliceSlider, ''Value'')>numslice '...
	   				'set(sliceSlider, ''Value'', numslice);' ...
	   			'end; '...
	   			'set(sliceSlider, ''Max'', numslice); ' ...
	   			'set(sliceSlider, ''SliderStep'', [100/numslice*.01 100/numslice*.1]); ' ...
	   			'set(sliceText, ''String'', get(sliceSlider, ''Value'')); ' ...		
	   			'slice=get(sliceSlider, ''Value''); ' ...
	   		'end; '...	   		
	   	'else '...
		   	'set(sliceSlider, ''Visible'', ''off''); ' ...
	   		'set(sliceTITLE, ''Visible'', ''off''); ' ...
	   		'set(sliceText, ''Visible'', ''off''); ' ...
	   		'set(sliceText, ''String'', ''all''); ' ...
	   		'slice=0; ' ...
	   	'end; '...   		
	   'end; ' ...
	   'if plotpref==50 ' ...
	   	'set(Cup, ''Visible'', ''on''); ' ...
		'set(Cdown, ''Visible'', ''on''); ' ...
		'set(Cinfo, ''Visible'', ''on''); ' ...
		'set(Ctext, ''Visible'', ''on''); ' ...
		'set(Cinfo, ''String'', NumContours); ' ...
	'else ' ...
		'set(Cup, ''Visible'', ''off''); ' ...
		'set(Cdown, ''Visible'', ''off''); ' ...
		'set(Cinfo, ''Visible'', ''off''); ' ...
		'set(Ctext, ''Visible'', ''off''); ' ...
		'set(Cinfo, ''String'', NumContours); ' ...
	'end; ' ...
	'if is1D==0 ' ...
		'set(MidPt, ''Visible'', ''on''); '...
		'set(AppAll, ''Visible'', ''on''); '...
		'set(ChooseCent, ''Visible'', ''on''); '...
	'else ' ...
		'set(MidPt, ''Visible'', ''off''); '...
		'set(ChooseCent, ''Visible'', ''off''); '...
		'set(AppAll, ''Visible'', ''off''); ' ...
	'end; '];
	  

set(plottype, 'Callback', setPlotTy);


%%%%%% Variable loader
varloader=['fname=get(LoadVarText, ''String'');' ...
	'vdat=eval(fname);' ...
	'if size(vdat,1)~=1 & size(vdat,2)~=1 ' ...
		'is1D=0; '...
		'issolid=0; '...
		'set(filetype, ''Value'', 9); '...
	'end; ' ];
	
set(loadVar, 'CallBack', [varloader setPlotTy]);

%%%%%%%file loader
fileloader=['fname=get(LoadFileText, ''String'');' ...
	'if otherFLAG~=7 & otherFLAG~=8 '...
		'load(fname);' ...
		'tmfn=0;' ...
		'if find(fname==''.'')>2 ' ...
			'tmfn=fname(1:find(fname==''.'')-1);' ...
		'else ' ...
			'tmfn=fname; ' ...
		'end; ' ...		
		'if is1D==0 & issolid==1 & otherFLAG==0 '...
			'vdat=full(spconvert(eval(tmfn)));' ...
		'elseif otherFLAG==0 & is1D & issolid==1 ' ...
			'vdat=eval(tmfn); ' ...
		'elseif otherFLAG==1 ' ...
			'vdat=eval(tmfn); ' ...
			'vdat=complex(vdat(:,1), vdat(:,2)); '...
		'elseif otherFLAG==2 ' ...
			'vdat=eval(tmfn); ' ...
		'elseif otherFLAG==3 ' ...
			'vdat=eval(tmfn); ' ...
		'elseif otherFLAG==4 ' ...
			'vdat=full(spconvert(eval(tmfn))); ' ...
		'elseif otherFLAG==5 ' ...
			'vdat=full(spconvert(eval(tmfn))); ' ...
		'elseif otherFLAG==6 ' ...
			'[is1D, vdat]=crxtomat(eval(tmfn)); ' ...
		'elseif otherFLAG==9 ' ...
			'load(fname);' ...		
		'end; '...
	'elseif otherFLAG==7 ' ...
		'[vdat, sw1, is2D]=readspinsight(fname); ' ...
		'if(is2D==1); is1D=0; else; is1D=1; end;  '...
	'elseif otherFLAG==8 ' ...
		'[vdat, sw1, is2D]=readbruker(fname); ' ...
		'if(is2D==1); is1D=0; else; is1D=1; end;  '...	
	'end; ' ];
	
set(loadFile, 'CallBack', [fileloader fftd2On setPlotTy]);

%%%%%%%% multi file loader
multiload=['l1=str2num(get(multilim1, ''String'')); ' ...
		'l2=str2num(get(multilim2, ''String'')); ' ...
		'fbase=get(multibase, ''String''); '...
		'vdat=multidat(fbase, l1,l2);' ...
		'if size(vdat,1)~=1 & size(vdat,2)~=1 ' ...
			'is1D=0; '...
			'issolid=0; '...
			'set(filetype, ''Value'', 2); '...
		'end; ' ...
		'workingdat=vdat; '];
set(loadMultiFile, 'Callback', [multiload fftd2On setPlotTy]);


%%%%%%%set input data type flag

TypeCallChangeFile=[' set(FileTypeText, ''String'', ''enter FILE name''); '...
				    ' set(loadFile, ''String'', ''Load a File''); '];

TypeCallChangeDIR=[' set(FileTypeText, ''String'', ''enter DIRECTORY''); '...
				    ' set(loadFile, ''String'', ''Load a DIR''); '];

otherFLAG=0;  %0=(ignore me)...1=Nx2 ASCII...2=NxM 2D ASCII...3=Nx1 ASCII...4=Nx4 sparse...5=Nx3 sparse
setinputprop=['val = get(filetype,''Value'');' ...
'if val == 1 ' ...
	' is1D=1; '...
	TypeCallChangeFile ...
	' issolid=1; otherFLAG=0;' ...
'elseif val == 2 ' ...
	' is1D=0; '...
	TypeCallChangeFile ...
	' issolid=1; otherFLAG=0;' ...
'elseif val == 3 ' ...
	' is1D=1; '...
	TypeCallChangeFile ...
	' issolid=0; otherFLAG=1; ' ...
'elseif val == 4 ' ...
	'is1D=0; '...
	TypeCallChangeFile ...
	' issolid=0; otherFLAG=2;' ...
'elseif val == 5 ' ...
	'is1D=1; '...
	TypeCallChangeFile ...
	' issolid=0; otherFLAG=3;' ...
'elseif val == 6 ' ...
	'is1D=0; '...
	TypeCallChangeFile ...
	'issolid=0; otherFLAG=4;' ...
'elseif val == 7 ' ...
	'is1D=0; '...
	TypeCallChangeFile ...
	' issolid=0; otherFLAG=5;' ...
'elseif val == 8 ' ...
	'is1D=0; '...
	TypeCallChangeFile ...
	'issolid=0; otherFLAG=6;' ...
'elseif val == 9 ' ...
	'is1D=0; '...
	TypeCallChangeDIR ...
	' issolid=0; otherFLAG=7;' ...
'elseif val == 10 ' ...
	'is1D=0; '...
	TypeCallChangeDIR ...
	'issolid=0; otherFLAG=8;' ...
'elseif val == 11 ' ...
	'is1D=0; '...
	TypeCallChangeFile ...
	'issolid=0; otherFLAG=9;' ...
'end;'];

set(filetype, 'Callback', [setinputprop fftd2On setPlotTy]);

%%% special case for the "Transpose button" as we need to reset the Slider for the ONE Slice selector
totrans=0;
TransCatch=['totrans=get(Transpose, ''Value''); '];

set(Transpose, 'Callback',[ TransCatch setPlotTy ]);

%%% special case for the "Transpose button" as we need to reset the Slider for the ONE Slice selector
totrans=0;
ZfillCatch=['zf=get(zfill, ''Value''); '];

set(zfill, 'Callback',[ ZfillCatch setPlotTy ]);

%%%% Phaser bits

changePh0=['ph0=get(ph0Slide, ''Value''); '...
	'set(curph0, ''String'', ph0);'];
set(ph0Slide, 'Callback', [changePh0 PlotterFunc]);

changePh1=['ph1=get(ph1Slide, ''Value''); '...
	'set(curph1, ''String'', ph1);'];
	
set(ph1Slide, 'Callback', [changePh1 PlotterFunc]);

GetCentPt=['[x y]=ginput; '...
	'if length(x)>1 ' ...
		'x=x(length(x)); ' ...
	'end ;' ...
	'if sw1 ~=0 '...
		'if totrans==0 '...
			'if zf==0 ' ...
				'centpt=round((x+sw1/2)*length(vdat(:,1))/(2*sw1)/2); '...
			'else ' ...
				'centpt=round((x+sw1/2)*length(vdat(:,1))/(2*sw1)); '...
			'end; ' ...
		'else ' ...
			'if zf==0 ' ...
				'centpt=round((x+sw1/2)*length(vdat(1,:))/(2*sw1)/2); '...
			'else ' ...
				'centpt=round((x+sw1/2)*length(vdat(1,:))/(2*sw1)); '...
			'end; ' ...
		'end; ' ...
	'else '...
		'centpt=round(x);' ...
	'end; ' ...
	'set(MidPt, ''String'', centpt); '];
	
set(ChooseCent, 'Callback', GetCentPt);


DoAppAll=['appphaseall=get(AppAll, ''Value''); '];

set(AppAll, 'Callback', [DoAppAll PlotterFunc ]);
			
%%%% Silce selector callback
setSlices=['if is1D==0 '...
		'slice=get(sliceSlider, ''Value'');' ...
		'slice=round(slice);' ...
		'if slice==0 ' ...
			'set(sliceText, ''String'', ''all''); ' ...
		'else ' ...
			'set(sliceText, ''String'', num2str(slice)); ' ...
		'end; '...
	'end; '];

set(sliceSlider, 'Callback', [setSlices PlotterFunc]);

%%% Contour ups and downs
MAXC=300;
setContsUP=['if NumContours<MAXC ' ...
		'NumContours=NumContours+1; '...
		'set(Cinfo, ''String'', NumContours); ' ...
	'end; '];

set(Cup, 'Callback', [setContsUP PlotterFunc]);

setContsDN=['if NumContours>1 ' ...
		'NumContours=NumContours-1; '...
		'set(Cinfo, ''String'', NumContours); ' ...
	'end; '];

set(Cdown, 'Callback', [setContsDN PlotterFunc]);

		
		

%%%%% Windowing options grabber

windopt=0;
winded1=0;
winded2=0;

set(winVal1, 'Visible', 'off');
set(winVal2, 'Visible', 'off');

gausSet=['val=get(gaussian, ''Value'');' ...
	 'if val==1 ' ...
	 	' windopt=2; ' ...
	 	' set(hanning, ''Value'', 0); ' ...
	 	' set(hamming, ''Value'', 0); ' ...
	 	' set(winVal1, ''Visible'', ''on''); ' ...
	 	' set(winVal2, ''Visible'', ''on''); ' ...
	 	' set(winED1, ''Visible'', ''on''); ' ...
	 	' set(winED2, ''Visible'', ''on''); ' ...
	 	' set(winED1, ''String'', ''offset (0--1)''); ' ...
	 	' set(winED2, ''String'', ''sigma (0--1)''); ' ...
	 'else ' ...
	 	' windopt=0; ' ...
	 	' set(gaussian, ''Value'', 0); ' ...
	 	' set(winED1, ''Visible'', ''off''); ' ...
	 	' set(winED2, ''Visible'', ''off''); ' ...
	 	' set(winVal2, ''Visible'', ''off''); ' ...
	 	' set(winVal1, ''Visible'', ''off''); ' ...
	 'end; ';];
set(gaussian, 'Callback', gausSet);
	 
hannSet=['val=get(hanning, ''Value'');' ...
	 'if val==1 ' ...
	 	' windopt=3; ' ...
	 	' set(gaussian, ''Value'', 0); ' ...
	 	' set(hamming, ''Value'', 0); ' ... 
	 	' set(winVal1, ''Visible'', ''on''); ' ...
	 	' set(winVal2, ''Visible'', ''off''); ' ...
	 	' set(winED1, ''Visible'', ''on''); ' ...
	 	' set(winED1, ''String'', ''frequency''); ' ...
	 	' set(winED2, ''Visible'', ''off''); ' ...
	 'else ' ...
	 	' windopt=0; ' ...
	 	' set(winED1, ''Visible'', ''off''); ' ...
	 	' set(winED2, ''Visible'', ''off''); ' ...
	 	' set(winVal2, ''Visible'', ''off''); ' ...
	 	' set(winVal1, ''Visible'', ''off''); ' ...
	 'end; '];
set(hanning, 'Callback', hannSet);


hammSet=['val=get(hamming, ''Value'');' ...
	 'if val==1 ' ...
	 	' windopt=4; ' ...
	 	' set(gaussian, ''Value'', 0); ' ...
	 	' set(hanning, ''Value'', 0); ' ...
		' set(winVal1, ''Visible'', ''on''); ' ...
		' set(winVal2, ''Visible'', ''off''); ' ...
		' set(winED1, ''Visible'', ''on''); ' ...
		' set(winED1, ''String'', ''frequency''); ' ...
		' set(winED2, ''Visible'', ''off''); ' ...
	 'else ' ...
	 	' windopt=0; ' ...
	 	' set(winED1, ''Visible'', ''off''); ' ...
	 	' set(winED2, ''Visible'', ''off''); ' ...
	 	' set(winVal2, ''Visible'', ''off''); ' ...
	 	' set(winVal1, ''Visible'', ''off''); ' ...
	 'end; ';];
set(hamming, 'Callback', hammSet);

%%%%%%%Real Plotter Actions
realPlt=['HitPlotButton=1; '];	
set(realP, 'Callback',[realPlt PlotterFunc]);


		
%%%%%%%Imag Plotter Actions
imagPlt=['HitPlotButton=2; '];	
set(imagP, 'Callback',[imagPlt PlotterFunc]);
		
%%%%%%%Absolute Plotter Actions
absPlt=['HitPlotButton=3; '];	
set(absP, 'Callback',[absPlt PlotterFunc]);
		
